{
	"__schema" : "4.1",
	"__type" : "page",
	"children" : {
		"__type" : "snippets",
		"items" : [
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-08-17T11:01:15.83856+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-08-17T11:02:10.452578+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "pDwVQB+GDQCVR9v9D2GZzw=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Dependent sorts in Leibniz are an experiment, which may or may not prove successful. Their implementation is very incomplete for now."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-08-17T11:02:28.811027+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-08-17T11:27:21.791077+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "KUX/Tx+GDQCVS2+jD2GZzw=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Standard sorts in Leibniz have a name, and otherwise no properties other than the subsort relations that are defined between the sorts in a sort graph. Dependent sorts are defined by *terms*, which can have arguments. These arguments can be other sorts but also values, a particular important case being integers. For example, this makes it possible to define a sort *list(â„•, 3)* describing lists containing exactly three integers. Plain sorts become a special case in that they are defined by zero-argument terms."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [ ]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-08-17T11:12:22.804333+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-08-17T11:13:11.880727+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "DJBFcR+GDQCVZLCsD2GZzw=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Dependent sorts are inspired by and named by analogy with [dependent types](https://en.wikipedia.org/wiki/Dependent_type), but they are something very different and in fact much simpler."
			},
			{
				"__type" : "textSnippet",
				"children" : {
					"__type" : "snippets",
					"items" : [
						{
							"__type" : "textSnippet",
							"children" : {
								"__type" : "snippets",
								"items" : [ ]
							},
							"createEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"createTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2021-08-17T11:13:32.672549+02:00"
								}
							},
							"editEmail" : {
								"__type" : "email",
								"emailString" : "<unknown>"
							},
							"editTime" : {
								"__type" : "time",
								"time" : {
									"__type" : "dateAndTime",
									"dateAndTimeString" : "2021-08-17T11:20:06.067752+02:00"
								}
							},
							"uid" : {
								"__type" : "uid",
								"uidString" : "NX7Edx+GDQCVZy3tD2GZzw=="
							},
							"paragraphStyle" : {
								"__type" : "textStyle"
							},
							"string" : "[FOLDS](https://ncatlab.org/nlab/show/FOLDS) (First-Order Logic with Dependent Sorts), by Michael Makkai, see [here](https://www.math.mcgill.ca/makkai/folds/foldsinpdf/) for more documentation. This is perhaps similar or identical to [First-Order Logic with Dependent Types](https://doi.org/10.1007/11814771_33)"
						}
					]
				},
				"createEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"createTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-08-17T11:15:45.395153+02:00"
					}
				},
				"editEmail" : {
					"__type" : "email",
					"emailString" : "<unknown>"
				},
				"editTime" : {
					"__type" : "time",
					"time" : {
						"__type" : "dateAndTime",
						"dateAndTimeString" : "2021-08-17T11:15:57.620014+02:00"
					}
				},
				"uid" : {
					"__type" : "uid",
					"uidString" : "qtEUfx+GDQCVauoaD2GZzw=="
				},
				"paragraphStyle" : {
					"__type" : "textStyle"
				},
				"string" : "Other uses of the term \"dependent sort\", which may or may not be related:"
			}
		]
	},
	"createEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"createTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2021-08-17T10:57:54.437544+02:00"
		}
	},
	"editEmail" : {
		"__type" : "email",
		"emailString" : "<unknown>"
	},
	"editTime" : {
		"__type" : "time",
		"time" : {
			"__type" : "dateAndTime",
			"dateAndTimeString" : "2021-08-17T10:57:54.437544+02:00"
		}
	},
	"pageType" : {
		"__type" : "namedPage",
		"title" : "Dependent sorts"
	},
	"uid" : {
		"__type" : "uuid",
		"uuid" : "5d951440-1f86-0d00-9546-93b70f6199cf"
	}
}